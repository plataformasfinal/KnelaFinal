tablas
use master
go
--------------------------------------------------------------------------------------------
if DB_ID('BDKnela') is not null
   drop database BDKnela
go
create database BDKnela
go
--------------------------------------------------------------------------------------------
use BDKnela
go
--------------------------------------------------------------------------------------------
if OBJECT_ID('TUsuario','U') is not null
	drop table  TUsuario
go 
create table TUsuario
(
	Usuario     varchar(50),
	Contrasena	varbinary(200),
	primary key (Usuario)
)  
go
if OBJECT_ID('TCliente','U') is not null
	drop table  TCliente
go 
create table TCliente
(
	IdCliente 		char(4) not null,
	ApellidoPaternoCliente 	varchar (50) not null,
	ApellidoMaternoCliente 	varchar (50) not null,
	NombresCliente 	varchar (50) not null,
	Dni int not null,
	Direccion 	varchar (50) not null,
	Usuario     varchar (50) unique not null,
	primary key (IdCliente),
	foreign key (Usuario) references TUsuario
)  
go
--------------------------------------------------------------------------------------------
if OBJECT_ID('TInsumo','U') is not null
	drop table  TInsumo
go 
create table TInsumo
(
	IdInsumo     char(4) not null,
	TipoDePostre varchar(50),
	NombreInsumo varchar(50),
	DescripcionInsumo varchar(50),
	primary key (IdInsumo)
)   
go
--------------------------------------------------------------------------------------------
if OBJECT_ID('TDetallePedido','U') is not null
	drop table  TDetallePedido
go 
create table TDetallePedido
(
	IdDetallePedido     char(4) not null,
	IdInsumo     char(4) not null,
	Cantidad int,
	CstUnitario int,
	CstTotal int,
	primary key (IdDetallePedido),
	foreign key (IdInsumo) references TInsumo
)   
go
--------------------------------------------------------------------------------------------
if OBJECT_ID('TPedido','U') is not null
	drop table  TPedido
go 
create table TPedido
(
	IdPedido     char(4) not null,
	fechaHora datetime,
	NroOrdenPedido int,
	DescripcionPedido varchar(50),
	IdCliente 		char(4) not null,
	IdDetallePedido     char(4) not null,
	primary key (IdPedido),
	foreign key (IdCliente) references TCliente,
	foreign key (IdDetallePedido) references TDetallePedido
)   
go
--------------------------------------------------------------------------------------------
if OBJECT_ID('TDetalleVenta','U') is not null
	drop table  TDetalleVenta
go 
create table TDetalleVenta
(
	IdDetalleVenta     char(4) not null,
	Cantidad int,
	Especificaciones varchar(50),
	primary key (IdDetalleVenta)
)   
go
--------------------------------------------------------------------------------------------
if OBJECT_ID('TBoleta','U') is not null
	drop table  TBoleta
go 
create table TBoleta
(
	IdBoleta     char(4) not null,
	IdDetalleVenta     char(4) not null,
	DsctoPromociones int,
	TipoDePago varchar(50),
	MontoTotal int,
	fechaHora datetime,
	primary key (IdBoleta),
	foreign key (IdDetalleVenta) references TDetalleVenta

)   
go

use BDKnela
go
--------------------------------------------------------------------------------------------
insert into TInsumo values  ('I001','Dulce', 'Pie de Limon', 'Postre dulce, hecho a base de limon')
insert into TInsumo values  ('I002','Salado', 'Sandwich Triple', 'Jamon, queso, y palta')
insert into TInsumo values  ('I003','Dulce', 'Muffins', 'Postre de chocolate')
insert into TInsumo values  ('I004','Salado', 'Pan Baguette', 'Pan de trigo')
insert into TInsumo values  ('I005','Salado', 'Croissant', 'Crocante')
insert into TInsumo values  ('I006','Dulce', 'Torta de Vainilla', 'Postre con crema')
insert into TInsumo values  ('I007','Dulce', 'Mousse', 'Chocalate con crema')
insert into TInsumo values  ('I008','Dulce', 'Pie de Manzana', 'Postre dulce, hecho a base de Manzana')
insert into TInsumo values  ('I009','Salado', 'Tamal', 'Aperivo dulce y salado')
insert into TInsumo values  ('I010','Salado', 'Empanada de Carne', 'Relleno de carne picada')
insert into TInsumo values  ('I011','Salado', 'Empanada de Pollo', 'Relleno de pollo con cebolla')
insert into TInsumo values  ('I012','Salado', 'Empanada de Salchicha', 'Rellena de Salchicha Vienna')
insert into TInsumo values  ('I013','Salado', 'Empanada de Queso', 'Laminas de queso')
insert into TInsumo values  ('I014','Salado', 'Empanada de Mixta', 'Queso y Jamon')
insert into TInsumo values  ('I015','Dulce', 'Lengua de Suegra', 'Manjar blanco')
insert into TInsumo values  ('I016','Dulce', 'Alfajor', 'Manjar y azucar en polvo')
insert into TInsumo values  ('I017','Dulce', 'Jugo de Naranja', 'Naranja natural')
insert into TInsumo values  ('I018','Dulce', 'Jugo de Piña', 'Piña natural')
insert into TInsumo values  ('I019','Dulce', 'El Thanos', 'Bebida color morado')
insert into TInsumo values  ('I020','Salado', 'Pudin', 'Chocolate batido')


select * from TInsumo
select * from TCliente
select * from TUsuario
---------------------------------------------------------------------------------------------
proc
if OBJECT_ID('spAgregarClienteE') is not null
	drop proc spAgregarClienteE
go
create proc spAgregarClienteE
@IdCliente char(4),@ApellidoPaternoCliente varchar(50),@ApellidoMaternoCliente varchar(50),@NombresCliente varchar(50), @Dni int,@Direccion varchar(50), @Usuario varchar(50), @Contrasena varchar(100) 
as
begin
	if not exists(select IdCliente from TCliente where IdCliente = @IdCliente)
		if not exists(select Usuario from TUsuario where Usuario = @Usuario)
			begin
				begin try
					insert into TUsuario values(@Usuario, ENCRYPTBYPASSPHRASE('password', @Contrasena))
					insert into TCliente values(@IdCliente, @ApellidoPaternoCliente, @ApellidoMaternoCliente, @NombresCliente, @Dni, @Direccion, @Usuario)
					select CodError = 0, Mensaje = 'Se agrego Usuario y Cliente en TUsuario y TCliente'
				end try
				begin catch
					select CodError = 1, Mensaje = 'Error: No se ejecuto la transaccion' 
				end catch
			end
		else select CodError = 1, Mensaje = 'Error: Usuario existe en TUsuario'
	else select CodError = 1, Mensaje = 'Error: IdCliente no existe en TCliente'
end
go

exec spAgregarClienteE 'C001','Cortez','Bravo','Juan',72600356,'Av. Cultura A-7','admin','12345'
go

select * from TCliente
select * from TUsuario
----------------------------------------------------------------------------------------
--PA para hacer login
if OBJECT_ID('spLoginUsuarioE') is not null
	drop proc spLoginUsuarioE
go

create proc spLoginUsuarioE
@Usuario varchar(50), @Contrasena varchar(50)
as
begin
	if exists (select Usuario from TUsuario where Usuario=@Usuario)
		begin
		declare @PasswdD varchar(50)
		set @PasswdD = (select CAST(DECRYPTBYPASSPHRASE('password', Contrasena) as varchar(50))
		from TUsuario where Usuario=@Usuario)
		if(@Contrasena = @PasswdD)
			begin
				select CodError=0, Mensaje = 'Usuario correctamente logueado'
			end
		else select CodError = 1, Mensaje = 'Error: La contraseña es incorrecta'
		end
	else
		select CodError = 1, Mensaje = 'Error: Usuario no existe'
end
go

exec spLoginUsuarioE 'admin', '12345'
go
----------------------------------------------------------------------------------------------------
if OBJECT_ID('spAgregarDetallePedido') is not null
	drop proc spAgregarDetallePedido
go
create proc spAgregarDetallePedido
@IdDetallePedido char(4), @IdInsumo char(4), @Cantidad int, @CstUnitario int, @CstTotal int 
as
begin
	if not exists(select IdDetallePedido from TDetallePedido where IdDetallePedido = @IdDetallePedido)
			begin
				begin try
					insert into TDetallePedido values(@IdDetallePedido, @IdInsumo, @Cantidad, @CstUnitario, (@Cantidad*@CstUnitario))
					select CodError = 0, Mensaje = 'Se realizo la orden de detalle pedido'
				end try
				begin catch
					select CodError = 1, Mensaje = 'Error: No se ejecuto la transaccion' 
				end catch
			end
	else select CodError = 1, Mensaje = 'Error: Este detalle pedido ya fue realizado'
end
go

exec spAgregarDetallePedido'DP01','I001',2,5,null
go

select * from TDetallePedido
----------------------------------------------------------------------------------------------------
if OBJECT_ID('spAgregarPedido1') is not null
	drop proc spAgregarPedido1
go
create proc spAgregarPedido1
@IdPedido char(4), @fechaHora datetime, @NroOrdenPedido int,@DescripcionPedido varchar(50), @IdCliente char(4), @IdDetallePedido char(4)
as
begin
	if not exists(select @IdPedido from TPedido where IdPedido = @IdPedido)
			begin
				begin try
					insert into TPedido values(@IdPedido, GETDATE(), @NroOrdenPedido, @DescripcionPedido, @IdCliente, @IdDetallePedido)
					select CodError = 0, Mensaje = 'Se realizo la orden de pedido'
				end try
				begin catch
					select CodError = 1, Mensaje = 'Error: No se ejecuto la transaccion' 
				end catch
			end
	else select CodError = 1, Mensaje = 'Error: Este pedido ya fue realizado'
end
go

exec spAgregarPedido1 'P001',null,2,'Ninguna','C001', 'DP01'
go

select * from TPedido
select * from TDetallePedido

select NombreInsumo from TInsumo

if OBJECT_ID('spDatosInsumo') is not null
	drop proc spDatosInsumo
go
create proc spDatosInsumo
@NombreInsumo varchar(50)
as
begin
select IdInsumo from TInsumo where NombreInsumo = @NombreInsumo
end
go

execute spDatosInsumo 'El Thanos'
go